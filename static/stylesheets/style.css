/* define global constants such as color scheme */
:root {
	--textColor: #222;
	--textColorLight: #555;
	--fontFamily: "Source Sans Pro", calibri, verdana, arial;
	--gapSize: 15px;
}

/*Page background*/
html {
	height: 100%;
	padding: 0;
	margin: 0;
	font-family: var(--fontFamily);
	font-size: 16px;
	color: var(--textColor);
	background-color: #fff;
}

/*align #main to center and allow it to stretch to the bottom of the page no matter what */
body {
	padding: 0;
	margin: 0;
	min-height: 100%;
	display : flex;
	justify-content: center;
	align-items: stretch;
}

/* Main content container; aligns header and form to top and footer to bottom */
#main {
	background-color: #e9e9e9;
	padding: 10px 50px;
	width: 700px;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	gap: var(--gapSize);
}

/* Remove white sidebars on narrow screens (such as mobile phones) */
@media only screen and (max-width: 900px) {
	#main {
		width: 100%;
	}
}

/* Big Header / Logo*/
h1 {
	padding: var(--gapSize);
	margin: 0;
	text-align: center;
	font-size: 46px;
	color: var(--textColorLight);
	text-shadow: 0px 1px 0 #ccc;
}

/* Contains tab heads; align them horizontally */
nav {
	display: flex;
	justify-content: center;
}

/* Hide radio buttons */
nav input[type=radio] {
	display: none;
}

/* Inactive tab head */
nav label {
	cursor: pointer;
	border-bottom: 2px solid #ccc;
	padding: 4px;
	flex-grow: 1;
	text-align: center;
	color: #888;
    text-transform: capitalize;
}

/* Highlight on mouse over */
nav label:hover {
	color: var(--textColorLight);
	border-bottom: 4px solid #ccc;
}

/* Active tab head */
nav input[type=radio]:checked+label {
	cursor: default;
	border-bottom: 4px solid #55f;
	color: var(--textColor);
}

/* Inactive tab content */
.tab {
	display: none;
	flex-direction: column;
	align-items: stretch;
	gap: var(--gapSize);
	animation: fadein 0.8s;
}

/* Animation for fading in from invisibility */
@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Contains all input elements */
form {
	flex-grow: 1;	/* This grows the size of the container to include all space not used by the header and footer, therefore pushing the footer to the bottom of the screen */
}

/* Sub-header within the Form */
h2 {
	font-weight: 400;
	margin: 0;
}

/* <labels> act as a container for both their text and their input field so that both can be positioned/aligned as a pair */
form label {
	display: flex;
	flex-direction: column;
    align-items: flex-start;
	line-height: 30px;
    text-transform: capitalize;
}

.subfieldsContainer {
    display: flex;
	flex-direction: column;
	gap: var(--gapSize);
	padding-left: 40px;
}

.clone {
    border-top: 1px solid #333;
    padding-top: 10px;
}

form label.forCheckbox {
    flex-direction: row;
    gap: var(--gapSize);
}

form label.forCheckbox input {
    order: -1;
}

/* to make two or more label + input combos appear on the same row we need a container around them to flex them horizontally... */
.grouped-inputs {
	display: flex;
	flex-direction: row;
	gap: var(--gapSize);
	justify-content: space-between;
}

/* ...and and make the labels share the available space equally */
.grouped-inputs label {
	flex-grow: 1;
}

/* Don't allow horizontally paired inputs on very narrow screens (such as mobile phones) */
@media only screen and (max-width: 700px) {
	.grouped-inputs {
		flex-direction: column;
	}
	.grouped-inputs label {
		flex-grow: 0;
	}
}

/* Text input fields */
input[type=text], textarea, select, input[type=number] {
    align-self: stretch;
    background-color: #fff;
	font-family: var(--fontFamily);
	font-size: 16px;
	padding: 8px 12px;
	border-radius: 3px;
	border: none;
	outline: none;
	resize: none;
}

/* Colorize placeholder text when empty */
input[type=text]::placeholder, textarea::placeholder, input[type=number]::placeholder {
	color: var(--textColorLight);
}

/* Reactive to mouse-over*/
input[type=text]:hover, textarea:hover, select:hover, input[type=number]:hover {
	box-shadow: 0 3px 0 #ccc;
}

/* Reactive to being used */
input[type=text]:focus, textarea:focus, select:focus, input[type=number]:focus {
	box-shadow: 0 3px 0 #66f;
}

/* Make placeholder text disappear as soon as input becomes focused */
input[type=text]:focus::placeholder, textarea:focus::placeholder, input[type=number]:focus::placeholder {
	color: #fff;
}

input[type=checkbox] {
    appearance: none;
    margin: 0;

    width: 16px;
    height: 16px;

    background-color: #fff;
    padding: 8px;
    border: none;
    outline: none;
    border-radius: 3px;

    transform: translateY(7px);
}
input[type=checkbox]:hover {
    box-shadow: 0 3px 0 #ccc;
}
input[type=checkbox]:checked {
    background-color: #55f;
}

/* Big blue buttons */
button, input[type=button] {
    max-width: 300px;
	cursor: pointer;
	border: none;
	outline: none;
	text-decoration: none;
	padding: 8px;
	border-radius: 3px;
	background-color: #55f;
	color: white;
	box-shadow: 0 3px 0 #22f;
} 

/* Reactive to mouse-over and focus*/
button:hover, input[type=button]:hover, button:focus, input[type=button]:focus {
	background-color: #66f;
	box-shadow: 0 3px 0 #33f;
}

/* Reactive to being pressed; shift position down by 3px */
button:active, input[type=button]:active {
	position: relative;
	top: 3px;
	background-color: #33d;
	box-shadow: none;
}

input[type=button].destroy {
    background-color: #a00;
    box-shadow: 0 3px 0 #500;
}

footer {
	color: var(--textColorLight);
	font-size: 12px;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	gap: 8px;
}

footer p {
	margin: 0;
}

/* Stylize links */
a, a:visited {
	color: #33d;
	text-decoration: none;
}

a:hover {
	text-decoration: underline;
}
